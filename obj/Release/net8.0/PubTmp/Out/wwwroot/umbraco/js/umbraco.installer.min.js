!function(){"use strict";angular.module("umbraco.install",["umbraco.directives"]),angular.module("umbraco.install").controller("Umbraco.InstallerController",function($scope,installerService){$scope.stepIndex=0,installerService.init(),$scope.installer=installerService.status,$scope.forward=function(){installerService.forward()},$scope.backward=function(){installerService.backward()},$scope.install=function(){installerService.install()},$scope.gotoStep=function(step){installerService.gotoNamedStep(step)},$scope.restart=function(){installerService.gotoStep(0)}}),angular.module("umbraco.install").run(function($templateCache){$templateCache.removeAll()}),angular.module("umbraco.install").factory("installerService",function($rootScope,$q,$timeout,$http,$templateRequest){var factTimer,_status={index:0,current:null,steps:null,loading:!0,progress:"100%"},_installerModel={installId:null,instructions:{}},facts=["Umbraco helped millions of people watch a man jump from the edge of space","Over 500 000 websites are currently powered by Umbraco","At least 2 people have named their cat 'Umbraco'","On an average day more than 1000 people download Umbraco","<a target='_blank' rel='noopener' href='https://www.youtube.com/channel/UCbGfwSAPflebnadyhEPw-wA?ref=tvFromInstaller'>Umbraco Learning Base</a> is the premier source of Umbraco video tutorials to get you started","You can find the world's friendliest CMS community at <a target='_blank' rel='noopener' href='https://our.umbraco.com/'>our.umbraco.com</a>","You can become a certified Umbraco developer by attending one of the official courses","Umbraco works really well on tablets","You have 100% control over your markup and design when crafting a website in Umbraco","Umbraco is the best of both worlds: 100% free and open source, and backed by a professional and profitable company","There's a pretty big chance you've visited a website powered by Umbraco today","'Umbraco-spotting' is the game of spotting big brands running Umbraco","At least 4 people have the Umbraco logo tattooed on them","'Umbraco' is the Danish name for an allen key","Umbraco has been around since 2005, that's a looong time in IT","Every year around 1500 Umbraco enthusiasts from around the world join the biggest hybrid Umbraco conference <a target='_blank' rel='noopener' href='https://codegarden.umbraco.com/'>Codegarden</a>","While you are installing Umbraco someone else on the other side of the planet is probably doing it too","You can extend Umbraco without modifying the source code using either JavaScript or C#","Umbraco has been installed in more than 198 countries"];function resolveView(view){return view.indexOf(".html")<0&&(view+=".html"),view.indexOf("/")<0&&(view="views/install/"+view),view}var service={status:_status,init:function(){service.status.loading=!0,_status.all||$templateRequest("views/install/error.html").then(x=>{service.getSteps().then(response=>{service.status.steps=response.data.steps,service.status.index=0,_installerModel.installId=response.data.installId,service.findNextStep(),$timeout(function(){service.status.loading=!1,service.status.configuring=!0},2e3)})})},getPackages:function(){return $http.get(Umbraco.Sys.ServerVariables.installApiBaseUrl+"GetPackages")},getSteps:function(){return $http.get(Umbraco.Sys.ServerVariables.installApiBaseUrl+"GetSetup")},gotoStep:function(index){var step=service.status.steps[index];step.view=resolveView(step.view),step.model||(step.model={}),service.status.index=index,service.status.current=step,service.retrieveCurrentStep()},gotoNamedStep:function(stepName){var step=_.find(service.status.steps,function(s,index){return!(!s.view||s.name!==stepName)&&(service.status.index=index,!0)});step.view=resolveView(step.view),step.model||(step.model={}),service.retrieveCurrentStep(),service.status.current=step},findNextStep:function(){var step=_.find(service.status.steps,function(s,index){return!!(s.view&&index>=service.status.index)&&(service.status.index=index,!0)});return step?(step.view.indexOf(".html")<0&&(step.view=step.view+".html"),step.view.indexOf("/")<0&&(step.view="views/install/"+step.view),step.model||(step.model={}),service.status.current=step,service.retrieveCurrentStep(),step):null},storeCurrentStep:function(){_installerModel.instructions[service.status.current.name]=service.status.current.model},retrieveCurrentStep:function(){_installerModel.instructions[service.status.current.name]&&(service.status.current.model=_installerModel.instructions[service.status.current.name])},forward:function(){service.storeCurrentStep(),service.status.index++,service.findNextStep()||service.install()},backwards:function(){service.storeCurrentStep(),service.gotoStep(service.status.index--)},install:function(){service.storeCurrentStep(),service.switchToFeedback(),service.status.feedback=function getDescriptionForStepAtIndex(steps,index){var sorted=_.sortBy(steps,"serverOrder");return sorted[index]?sorted[index].description:null}(service.status.steps,0),service.status.progress=0,function processInstallStep(){$http.post(Umbraco.Sys.ServerVariables.installApiBaseUrl+"PostPerformInstall",_installerModel).then(function(response){var data=response.data;if(data.complete)service.complete();else if(service.status.progress=function calculateProgress(steps,next){for(var sorted=_.sortBy(steps,"serverOrder"),pct="100%",i=sorted.length-1;i>=0;i--)if(sorted[i].name==next){pct=Math.floor((i+1)/steps.length*100)+"%";break}return pct}(service.status.steps,data.nextStep),data.view){var v=resolveView(data.view);service.status.current={view:v,model:data.model},service.switchToConfiguration()}else{var desc=function getDescriptionForStepName(steps,name){var found=_.find(steps,function(i){return i.name==name});return found?found.description:null}(service.status.steps,data.nextStep);desc&&(service.status.feedback=desc),processInstallStep()}},handleErrorResponse)}()},randomFact:function(){!function safeApply(scope,fn){scope.$$phase||scope.$root.$$phase?Utilities.isFunction(fn)&&fn():Utilities.isFunction(fn)?scope.$apply(fn):scope.$apply()}($rootScope,function(){service.status.fact=facts[_.random(facts.length-1)]})},switchToFeedback:function(){service.status.current=null,service.status.loading=!0,service.status.configuring=!1,service.randomFact(),factTimer=window.setInterval(function(){service.randomFact()},6e3)},switchToConfiguration:function(){service.status.loading=!1,service.status.configuring=!0,service.status.feedback=null,service.status.fact=null,factTimer&&clearInterval(factTimer)},complete:function(){$http.post(Umbraco.Sys.ServerVariables.installApiBaseUrl+"CompleteInstall",_installerModel).then(function(){service.status.progress="100%",service.status.done=!0,service.status.feedback="Restarting and redirecting you to Umbraco, please wait",service.status.loading=!1,factTimer&&clearInterval(factTimer),window.location.href=Umbraco.Sys.ServerVariables.umbracoBaseUrl},handleErrorResponse)}},handleErrorResponse=function(response){var data=response.data,status=response.status;if(status>=500&&status<600){service.status.current={view:"ysod",model:null};var ysod=data;$timeout(function(){document.getElementById("ysod").contentDocument.write(ysod)},500)}else{var v=data.view?resolveView(data.view):resolveView("error"),model=data.model?data.model:data;service.status.current={view:v,model:model}}service.switchToConfiguration()};return service}),angular.module("umbraco.install").controller("Umbraco.Installer.DataBaseController",function($scope,$http,installerService){$scope.checking=!1,$scope.invalidDbDns=!1,$scope.dbs=$scope.installer.current.model.databases,window.dbs=$scope.dbs,$scope.providerNames=_.chain(window.dbs).map("providerName").filter(x=>x).uniq().value(),$scope.selectedDbMeta||($scope.selectedDbMeta=$scope.dbs[0]),$scope.$watch("selectedDbMeta",function(newValue){$scope.installer.current.model.integratedAuth=!1,$scope.installer.current.model.databaseProviderMetadataId=newValue.id,$scope.installer.current.model.providerName=newValue.providerName,$scope.installer.current.model.databaseName=newValue.defaultDatabaseName}),$scope.isCustom=function(){return"Custom"===$scope.selectedDbMeta.displayName},$scope.validateAndForward=function(){if(!$scope.checking&&this.installerForm.$valid){$scope.checking=!0,$scope.invalidDbDns=!1;var model=installerService.status.current.model;$http.post(Umbraco.Sys.ServerVariables.installApiBaseUrl+"PostValidateDatabaseConnection",model).then(function(response){!0===response.data?installerService.forward():$scope.invalidDbDns=!0,$scope.checking=!1},function(){$scope.invalidDbDns=!0,$scope.checking=!1})}}}),angular.module("umbraco.install").controller("Umbraco.Installer.PackagesController",function($scope,installerService){installerService.getPackages().then(function(response){$scope.packages=response.data}),$scope.setPackageAndContinue=function(pckId){installerService.status.current.model=pckId,installerService.forward()}}),angular.module("umbraco.install").controller("Umbraco.Install.UserController",function($scope,$sce,installerService){var _$scope$installer$cur;if($scope.majorVersion=Umbraco.Sys.ServerVariables.application.version,$scope.passwordPattern=/.*/,$scope.installer.current.model.subscribeToNewsLetter=$scope.installer.current.model.subscribeToNewsLetter||!1,setTelemetryLevelAndDescription(null!==(_$scope$installer$cur=$scope.installer.current.model.telemetryIndex)&&void 0!==_$scope$installer$cur?_$scope$installer$cur:2),$scope.installer.current.model.minNonAlphaNumericLength>0){for(var exp="",i=0;i<$scope.installer.current.model.minNonAlphaNumericLength;i++)exp+=".*[\\W].*";exp=exp.replace(".*.*",".*"),$scope.passwordPattern=new RegExp(exp)}if("noUiSlider"in window){let consentSliderStartLevel=2;const initialConsentLevel=$scope.installer.current.model.consentLevels.findIndex(x=>x.level===$scope.installer.current.model.telemetryLevel);-1!==initialConsentLevel&&(consentSliderStartLevel=initialConsentLevel+1);const sliderOptions={start:consentSliderStartLevel,step:1,tooltips:[!1],range:{min:1,max:3},behaviour:"smooth-steps-tap",pips:{mode:"values",density:50,values:[1,2,3],format:{to:function(value){return $scope.installer.current.model.consentLevels[value-1].level},from:function(value){return Number(value)}}}},consentSlider=document.getElementById("consentSlider");if(consentSlider){window.noUiSlider.create(consentSlider,sliderOptions),consentSlider.noUiSlider.on("change",function onChangeConsent(values){const result=Math.round(Number(values[0])-1);$scope.$apply(()=>{setTelemetryLevelAndDescription(result)})});const pips=consentSlider.querySelectorAll(".noUi-value");consentSlider.noUiSlider.on("update",function(values,handle){consentSlider.querySelectorAll(".noUi-value").forEach(pip=>{pip.classList.remove("noUi-value-active"),Number(values[handle])===Number(pip.getAttribute("data-value"))&&pip.classList.add("noUi-value-active")})}),$(consentSlider).on("$destroy",function(){consentSlider.noUiSlider.off()}),pips.forEach(function(pip){pip.addEventListener("click",function(){const value=pip.getAttribute("data-value");consentSlider.noUiSlider.set(value)})})}}function setTelemetryLevelAndDescription(idx){$scope.telemetryDescription=$sce.trustAsHtml($scope.installer.current.model.consentLevels[idx].description),$scope.installer.current.model.telemetryIndex=idx,$scope.installer.current.model.telemetryLevel=$scope.installer.current.model.consentLevels[idx].level}$scope.validateAndInstall=function(){installerService.install()},$scope.validateAndForward=function(){this.installerForm.$valid&&installerService.forward()},$scope.togglePassword=function(){var elem=$("form[name='installerForm'] input[name='installer.current.model.password']");elem.attr("type","text"===elem.attr("type")?"password":"text"),elem.focus(),$(".password-text.show, .password-text.hide").toggle()}})}();